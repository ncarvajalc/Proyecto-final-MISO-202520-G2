version: '3.9'
services:
  access-control-db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: access_control_user
      POSTGRES_PASSWORD: access_control_password
      POSTGRES_DB: access_control_schema
    ports:
      - "5432:5432"
    volumes:
      - access_control_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 4s
      timeout: 2s
      retries: 2
    profiles:
      - access
      - todo
      - backend
  access_control:
    build: ./backend/access_control
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - app_user:/app/app
    environment:
      - DATABASE_URL=postgresql://access_control_user:access_control_password@access-control-db:5432/access_control_schema
    ports:
      - "8000:8000"
    depends_on:
      access-control-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 4s
      timeout: 2s
      retries: 5
    profiles:
      - access
      - todo
      - backend
  cliente_web:
    build: ./cliente_web
    command: pnpm run dev --host 0.0.0.0 --port 3000
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - access_control
    restart: on-failure
    profiles:
      - todo
      - web
  products-db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: product_user
      POSTGRES_PASSWORD: product_password
      POSTGRES_DB: product_schema
    ports:
      - "5433:5432"
    volumes:
      - product_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 4s
      timeout: 2s
      retries: 2
    profiles:
      - todo
      - backend
      - product
  product:
    build: ./backend/product
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001
    volumes:
      - app_product:/app/app
    environment:
      - DATABASE_URL=postgresql://product_user:product_password@products-db:5432/product_schema
    ports:
      - "8001:8001"
    depends_on:
      products-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 4s
      timeout: 2s
      retries: 5
    profiles:
      - todo
      - backend
      - product

volumes:
  access_control_data:
  app_user:
  product_data:
  app_product:
