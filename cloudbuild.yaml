# cloudbuild.yaml
options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _PROJECT_ID: "the-respect-435301-u2"
  _REGION: "us-central1"
  _ARTIFACT_REPO: "monorepo-repo"
  _CLOUDSQL_INSTANCE: "the-respect-435301-u2:us-central1:monorepo-db"
  _VPC_CONNECTOR: "connector-1"
  _DB_NAME: "monorepo"

steps:

# --- SECURITY AUDIT ---
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/security-audit:$SHORT_SHA', './backend/SecurityAndAudit']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/security-audit:$SHORT_SHA']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
    - -c
    - |
      gcloud run deploy security-audit \
        --image us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/security-audit:$SHORT_SHA \
        --region ${_REGION} \
        --platform managed \
        --allow-unauthenticated \
        --add-cloudsql-instances ${_CLOUDSQL_INSTANCE} \
        --vpc-connector ${_VPC_CONNECTOR} \
        --set-env-vars DATABASE_SCHEMA=security_audit_schema,DB_NAME=${_DB_NAME} \
        --set-secrets DB_PASSWORD=db-password:latest \
        --memory=512Mi --cpu=1 --min-instances=0 --max-instances=3

# --- PURCHASES SUPPLIERS ---
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/purchases-suppliers:$SHORT_SHA', './backend/PurchasesAndSuppliers']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/purchases-suppliers:$SHORT_SHA']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
    - -c
    - |
      gcloud run deploy purchases-suppliers \
        --image us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/purchases-suppliers:$SHORT_SHA \
        --region ${_REGION} \
        --platform managed \
        --allow-unauthenticated \
        --add-cloudsql-instances ${_CLOUDSQL_INSTANCE} \
        --vpc-connector ${_VPC_CONNECTOR} \
        --set-env-vars DATABASE_SCHEMA=purchases_suppliers_schema,DB_NAME=${_DB_NAME} \
        --set-secrets DB_PASSWORD=db-password:latest \
        --memory=512Mi --cpu=1 --min-instances=0 --max-instances=3

# --- TRACKING ---
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/tracking:$SHORT_SHA', './backend/Tracking']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/tracking:$SHORT_SHA']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
    - -c
    - |
      gcloud run deploy tracking \
        --image us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/tracking:$SHORT_SHA \
        --region ${_REGION} \
        --platform managed \
        --allow-unauthenticated \
        --add-cloudsql-instances ${_CLOUDSQL_INSTANCE} \
        --vpc-connector ${_VPC_CONNECTOR} \
        --set-env-vars DATABASE_SCHEMA=tracking_schema,DB_NAME=${_DB_NAME} \
        --set-secrets DB_PASSWORD=db-password:latest \
        --memory=512Mi --cpu=1 --min-instances=0 --max-instances=3

# --- WAREHOUSE ---
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/warehouse:$SHORT_SHA', './backend/Warehouse']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/warehouse:$SHORT_SHA']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
    - -c
    - |
      gcloud run deploy warehouse \
        --image us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/warehouse:$SHORT_SHA \
        --region ${_REGION} \
        --platform managed \
        --allow-unauthenticated \
        --add-cloudsql-instances ${_CLOUDSQL_INSTANCE} \
        --vpc-connector ${_VPC_CONNECTOR} \
        --set-env-vars DATABASE_SCHEMA=warehouse_schema,DB_NAME=${_DB_NAME} \
        --set-secrets DB_PASSWORD=db-password:latest \
        --memory=512Mi --cpu=1 --min-instances=0 --max-instances=3

# --- SALESFORCE ---
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/salesforce:$SHORT_SHA', './backend/SalesForce']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/salesforce:$SHORT_SHA']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
    - -c
    - |
      gcloud run deploy salesforce \
        --image us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/salesforce:$SHORT_SHA \
        --region ${_REGION} \
        --platform managed \
        --allow-unauthenticated \
        --add-cloudsql-instances ${_CLOUDSQL_INSTANCE} \
        --vpc-connector ${_VPC_CONNECTOR} \
        --set-env-vars DATABASE_SCHEMA=salesforce_schema,DB_NAME=${_DB_NAME} \
        --set-secrets DB_PASSWORD=db-password:latest \
        --memory=512Mi --cpu=1 --min-instances=0 --max-instances=3

# --- API GATEWAY ---
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/api-gateway:$SHORT_SHA', './api_gateway']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/api-gateway:$SHORT_SHA']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
    - -c
    - |
      gcloud run deploy api-gateway \
        --image us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/api-gateway:$SHORT_SHA \
        --region ${_REGION} \
        --platform managed \
        --allow-unauthenticated \
        --memory=512Mi --cpu=1 \
        --min-instances=0 --max-instances=3

# --- CLIENTE WEB ---
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/cliente-web:$SHORT_SHA', './cliente_web']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/cliente-web:$SHORT_SHA']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
    - -c
    - |
      gcloud run deploy cliente-web \
        --image us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/cliente-web:$SHORT_SHA \
        --region ${_REGION} \
        --platform managed \
        --allow-unauthenticated \
        --memory=512Mi --cpu=1 \
        --min-instances=0 --max-instances=3
